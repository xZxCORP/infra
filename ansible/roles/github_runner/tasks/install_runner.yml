---
- name: Define runner variables
  ansible.builtin.set_fact:
    github_runner_current_runner_name: "{{ runner.name | default(ansible_hostname ~ '-' ~ loop_index) }}"
    github_runner_current_runner_dir: "{{ runner.dir | default(github_runner_base_dir ~ '/' ~ (runner.name | default('runner' ~ loop_index))) }}"
    github_runner_current_runner_user: "{{ runner.user | default(github_runner_user) }}"
    github_runner_current_runner_labels: "{{ runner.labels | default([]) }}"
    github_runner_current_architecture: "{{ runner.architecture | default(github_runner_default_architecture) }}"

- name: Generate registration token via GitHub API
  ansible.builtin.uri:
    url: "https://api.github.com/orgs/{{ github_runner_organization }}/actions/runners/registration-token"
    method: POST
    headers:
      Authorization: "token {{ github_runner_api_token }}"
      Accept: "application/vnd.github.v3+json"
    status_code: 201
    body_format: json
  register: github_runner_token_response
  delegate_to: localhost
  become: false

- name: Extract access token
  ansible.builtin.set_fact:
    github_runner_token: "{{ github_runner_token_response.json.token }}"

- name: Create the runner directory
  ansible.builtin.file:
    path: "{{ github_runner_current_runner_dir }}"
    state: directory
    owner: "{{ github_runner_current_runner_user }}"
    group: "{{ github_runner_current_runner_user }}"
    mode: "0750"
  become: true

- name: Download and extract the runner binary as root
  ansible.builtin.unarchive:
    src: "
      https://github.com/actions/runner/releases/download/\
      v{{ github_runner_version }}\
      /actions-runner-linux-{{ github_runner_current_architecture }}-{{ github_runner_version }}.tar.gz"
    dest: "{{ github_runner_current_runner_dir }}"
    remote_src: true
  become: true

- name: Set correct ownership for runner files
  ansible.builtin.file:
    path: "{{ github_runner_current_runner_dir }}"
    owner: "{{ github_runner_current_runner_user }}"
    group: "{{ github_runner_current_runner_user }}"
    recurse: true
  become: true

- name: Install dependencies
  ansible.builtin.command:
    cmd: ./bin/installdependencies.sh
    chdir: "{{ github_runner_current_runner_dir }}"
  become: true
  args:
    creates: "{{ github_runner_current_runner_dir }}/installed_dependencies"
  register: github_dependencies_result
  changed_when: github_dependencies_result.rc == 0

- name: Prepare the runner configuration
  ansible.builtin.set_fact:
    github_runner_labels_string: "{{ github_runner_current_runner_labels | join(',') }}"
  when: github_runner_current_runner_labels | length > 0

- name: Check if runner is already configured
  ansible.builtin.stat:
    path: "{{ github_runner_current_runner_dir }}/.runner"
  register: github_runner_configured
  become: true

- name: Create script for configuring runner
  ansible.builtin.template:
    src: configure_runner.sh.j2
    dest: "{{ github_runner_current_runner_dir }}/configure_runner.sh"
    owner: "{{ github_runner_current_runner_user }}"
    group: "{{ github_runner_current_runner_user }}"
    mode: "0755"
  become: true
  when: not github_runner_configured.stat.exists

- name: Configure the runner
  ansible.builtin.command:
    cmd: "sudo -u {{ github_runner_current_runner_user }} {{ github_runner_current_runner_dir }}/configure_runner.sh"
    chdir: "{{ github_runner_current_runner_dir }}"
  become: true
  register: github_runner_config_result
  changed_when: github_runner_config_result.rc == 0
  when: not github_runner_configured.stat.exists

- name: Install the runner as a service
  ansible.builtin.command:
    cmd: ./svc.sh install {{ github_runner_current_runner_user }}
    chdir: "{{ github_runner_current_runner_dir }}"
  become: true
  args:
    creates: "/etc/systemd/system/actions.runner.{{ github_runner_organization }}.{{ github_runner_current_runner_name }}.service"
  when: github_runner_as_service

- name: Start and enable the runner service
  ansible.builtin.systemd:
    name: "actions.runner.{{ github_runner_organization }}.{{ github_runner_current_runner_name }}.service"
    state: started
    enabled: true
    daemon_reload: true
  become: true
  when: github_runner_as_service
