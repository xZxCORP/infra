---
- name: Check if K3s server is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_binary
  become: true

- name: Download K3s install script
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'
  become: true

- name: Install K3s server
  ansible.builtin.command:
    cmd: >
      /tmp/k3s-install.sh
      {{ k3s_extra_args }}
    creates: /usr/local/bin/k3s
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    K3S_TOKEN: "{{ k3s_node_token }}"
    K3S_ADVERTISE_ADDRESS: "{{ ansible_default_ipv4.address }}"
    K3S_TLS_SAN: "{{ ansible_default_ipv4.address }}"
    K3S_BIND_ADDRESS: "0.0.0.0"
  become: true
  register: k3s_server_install
  when: not k3s_binary.stat.exists
  notify: Wait for node-token file

- name: Remove K3s install script
  ansible.builtin.file:
    path: /tmp/k3s-install.sh
    state: absent
  become: true

- name: Get K3s node token
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token_content
  become: true

- name: Set fact for node token
  ansible.builtin.set_fact:
    k3s_node_token: "{{ node_token_content.content | b64decode | trim }}"
- name: Create .kube directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0700'
- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: true
- name: Copy kubeconfig for user
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    mode: '0600'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: true
