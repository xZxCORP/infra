---
- name: Check if K3s server is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_binary
  become: true

- name: Install K3s server directly
  ansible.builtin.shell: |
    curl -sfL https://get.k3s.io | \
    INSTALL_K3S_VERSION={{ k3s_version }} \
    K3S_TOKEN={{ k3s_node_token }} \
    sh -s - server \
    --advertise-address={{ ansible_default_ipv4.address }} \
    --tls-san={{ ansible_default_ipv4.address }} \
    --bind-address=0.0.0.0 \
    {{ k3s_extra_args }}
  args:
    creates: /usr/local/bin/k3s
  become: true
  register: k3s_server_install
  when: not k3s_binary.stat.exists

- name: Wait for node-token file to be generated
  ansible.builtin.wait_for:
    path: /var/lib/rancher/k3s/server/node-token
  become: true
  when: k3s_server_install.changed
- name: Get K3s node token
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token_content
  become: true

- name: Set fact for node token
  ansible.builtin.set_fact:
    k3s_node_token: "{{ node_token_content.content | b64decode | trim }}"
- name: Create .kube directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0700'

- name: Copy kubeconfig for user
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: true
    mode: '0600'
  become: true