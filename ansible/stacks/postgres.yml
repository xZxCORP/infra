version: "3.9"
services:
  postgres:
    image: postgres:17.5
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.node-role == persistence
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    configs:
      - source: custom_entrypoint_config
        target: /custom-entrypoint.sh
        mode: 0755
    volumes:
      - postgres_data:/var/lib/postgresql/data
    entrypoint: ["/custom-entrypoint.sh"]
    networks:
      - database
  adminer:
    image: adminer:5.3.0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.node-role == persistence
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.adminer.rule=Host(`adminer.zcorp.ovh`)"
        - "traefik.http.routers.adminer.entrypoints=websecure"
        - "traefik.http.routers.adminer.tls.certresolver=myresolver"
        - "traefik.http.services.adminer.loadbalancer.server.port=8080"
        - "traefik.http.routers.adminer.middlewares=adminer-auth"
        - "traefik.http.middlewares.adminer-auth.basicauth.users=admin:$$2y$$05$$LVH5/nqo4PGupl36GEKHjuxLeWKQ2XdYmoe8sQ.xU/L1hRcRJOM5K"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: galkaev
    depends_on:
      - postgres
    networks:
      - database
      - proxy
networks:
  proxy:
    external: true
  database:
    external: true
configs:
  custom_entrypoint_config:
    file: /opt/config/postgres/custom-entrypoint.sh
    name: custom_entrypoint_config_v1.1
volumes:
  postgres_data:
