name: Infra
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      infrastructure_changed: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Transcrypt
        run: |
          git clone https://github.com/elasticdog/transcrypt.git
          cd transcrypt
          sudo ln -s "${PWD}/transcrypt" /usr/local/bin/transcrypt
      - name: Decrypt with Transcrypt
        run: |
          transcrypt -c aes-256-cbc -p '${{ secrets.TRANSCRYPT_PASSWORD }}' -y
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
      - name: Plan Terraform Changes
        id: plan
        working-directory: ./terraform
        run: |
          set +e
          terraform plan -var-file=terraform.tfvars -detailed-exitcode -out=tfplan
          PLAN_EXIT_CODE=$?
          set -e
          echo "exitcode=$PLAN_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "Plan exit code: $PLAN_EXIT_CODE"
      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.plan.outputs.exitcode == '2'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
      - name: Generate Ansible Inventory
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.plan.outputs.exitcode == '2'
        working-directory: ./terraform
        run: |
          mkdir -p ../ansible/inventory
          terraform output -raw ansible_inventory > ../ansible/inventory/hosts
      - name: Commit Inventory File
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.plan.outputs.exitcode == '2'
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add ansible/inventory/hosts
          git commit -m "Update Ansible inventory [skip ci]" || echo "No changes to commit"
          git push
  lint:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git safe directory
        run: |
          git config --global --add safe.directory "$(pwd)"
      - name: Create vault password file
        run: |
          echo '${{ secrets.ANSIBLE_VAULT_PASSWORD }}' > ./ansible/.vault-pass.txt
      - name: Run ansible-lint
        uses: ansible/ansible-lint@main
        with:
          working_directory: "./ansible"
  ansible:
    runs-on: ubuntu-latest
    needs: [terraform, lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
      - name: Create vault password file
        run: |
          echo '${{ secrets.ANSIBLE_VAULT_PASSWORD }}' > ./ansible/.vault-pass.txt
      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: |
          ansible-playbook cluster.yml