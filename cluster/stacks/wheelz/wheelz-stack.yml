version: "3.8"

services:
  auth:
    image: zcorp0902746/wheelz-auth-service:latest
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-auth-service.rule=Host(`wheelz-auth.zcorp.ovh`)
        - traefik.http.routers.wheelz-auth-service.entrypoints=websecure
        - traefik.http.routers.wheelz-auth-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-auth-service.loadbalancer.server.port=3000
    environment:
      HOST: "0.0.0.0"
    networks:
      - proxy
  user:
    image: zcorp0902746/wheelz-user-service:latest
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-user-service.rule=Host(`wheelz-user.zcorp.ovh`)
        - traefik.http.routers.wheelz-user-service.entrypoints=websecure
        - traefik.http.routers.wheelz-user-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-user-service.loadbalancer.server.port=3000
    environment:
      HOST: "0.0.0.0"
    networks:
      - proxy
  front:
    image: zcorp0902746/wheelz-front-service:latest
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure

      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-front-service.rule=Host(`wheelz-front.zcorp.ovh`)
        - traefik.http.routers.wheelz-front-service.entrypoints=websecure
        - traefik.http.routers.wheelz-front-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-front-service.loadbalancer.server.port=80

    networks:
      - proxy
  blockchain:
    image: zcorp0902746/wheelz-blockchain-service:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-blockchain-service.rule=Host(`wheelz-blockchain.zcorp.ovh`)
        - traefik.http.routers.wheelz-blockchain-service.entrypoints=websecure
        - traefik.http.routers.wheelz-blockchain-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-blockchain-service.loadbalancer.server.port=3000
    environment:
      HOST: "0.0.0.0"
    networks:
      - proxy
  transaction:
    image: zcorp0902746/wheelz-transaction-service:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-transaction-service.rule=Host(`wheelz-transaction.zcorp.ovh`)
        - traefik.http.routers.wheelz-transaction-service.entrypoints=websecure
        - traefik.http.routers.wheelz-transaction-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-transaction-service.loadbalancer.server.port=3000
    environment:
      HOST: "0.0.0.0"
    networks:
      - proxy
  notification:
    image: zcorp0902746/wheelz-notification-service:latest

    environment:
      NODE_ENV: production
      NOTIFICATION_QUEUE_URL: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      NOTIFICATION_QUEUE_NAME: notifications
      MESSAGE_EMITTER_HOST: ${SMTP_HOST}
      MESSAGE_EMITTER_PORT: ${SMTP_PORT}
      MESSAGE_EMITTER_USERNAME: ${SMTP_USERNAME}
      MESSAGE_EMITTER_PASSWORD: ${SMTP_PASSWORD}
      LOG_LEVEL: info
    networks:
      - proxy
  showcase:
    image: zcorp0902746/wheelz-showcase-service:latest
    deploy:
      # mode: replicated
      # replicas: 3
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-showcase-service.rule=Host(`zcorp.ovh`)
        - traefik.http.routers.wheelz-showcase-service.entrypoints=websecure
        - traefik.http.routers.wheelz-showcase-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-showcase-service.loadbalancer.server.port=80
    volumes:
      - wordpress_data:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: showcase
    networks:
      - proxy
networks:
  proxy:
    external: true
volumes:
  wordpress_data:
