version: "3.8"

services:
  auth:
    image: zcorp0902746/wheelz-auth-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-auth-service.rule=Host(`wheelz-auth.zcorp.ovh`)
        - traefik.http.routers.wheelz-auth-service.entrypoints=websecure
        - traefik.http.routers.wheelz-auth-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-auth-service.loadbalancer.server.port=3000
    environment:
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: auth_service_db
      USER_SERVICE_URL: http://user:3000
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - proxy
  user:
    image: zcorp0902746/wheelz-user-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-user-service.rule=Host(`wheelz-user.zcorp.ovh`)
        - traefik.http.routers.wheelz-user-service.entrypoints=websecure
        - traefik.http.routers.wheelz-user-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-user-service.loadbalancer.server.port=3000
    environment:
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: user_service_db
      AUTH_SERVICE_URL: http://auth:3000
    networks:
      - proxy
  front:
    image: zcorp0902746/wheelz-front-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-front-service.rule=Host(`wheelz-front.zcorp.ovh`)
        - traefik.http.routers.wheelz-front-service.entrypoints=websecure
        - traefik.http.routers.wheelz-front-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-front-service.loadbalancer.server.port=80

    networks:
      - proxy
  chain:
    image: zcorp0902746/wheelz-chain-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-chain-service.rule=Host(`wheelz-chain.zcorp.ovh`)
        - traefik.http.routers.wheelz-chain-service.entrypoints=websecure
        - traefik.http.routers.wheelz-chain-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-chain-service.loadbalancer.server.port=3000
    environment:
      API_HOST: 0.0.0.0
      API_PORT: 3000
      TRANSACTION_QUEUE_URL: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      TRANSACTION_QUEUE_NEW_NAME: transactions_new
      TRANSACTION_QUEUE_COMPLETED_NAME: transactions_completed
      DATA_SIGNER_ALGORITHM: ${SIGNATURE_ALGORITHM}
      DATA_SIGNER_PUBLIC: ${SIGNATURE_PUBLIC}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CHAIN_STATE_DB_NAME: chain_state_service_db
      CHAIN_STATE_DB_USERNAME: ${POSTGRES_USER}
      CHAIN_STATE_DB_PASSWORD: ${POSTGRES_PASSWORD}
      CHAIN_STATE_DB_HOST: postgres
      CHAIN_STATE_DB_PORT: 5432
      TRANSACTION_SERVICE_URL: http://transaction:3000
      AUTH_SERVICE_URL: http://auth:3000
      CHAIN_URI: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongo:27017
      CHAIN_DATABASE_NAME: ${MONGODB_DATABASE}
      CHAIN_COLLECTION_NAME: blocks
      LOG_LEVEL: info
    networks:
      - proxy
  transaction:
    image: zcorp0902746/wheelz-transaction-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-transaction-service.rule=Host(`wheelz-transaction.zcorp.ovh`)
        - traefik.http.routers.wheelz-transaction-service.entrypoints=websecure
        - traefik.http.routers.wheelz-transaction-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-transaction-service.loadbalancer.server.port=3000
    environment:
      NODE_ENV: production
      TRANSACTION_QUEUE_URL: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      TRANSACTION_QUEUE_NEW_NAME: transactions_new
      TRANSACTION_QUEUE_COMPLETED_NAME: transactions_completed
      TRANSACTION_REPOSITORY_URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongo:27017/?tls=false
      TRANSACTION_REPOSITORY_DATABASE: ${MONGODB_DATABASE}
      TRANSACTION_REPOSITORY_COLLECTION: transactions
      API_HOST: 0.0.0.0
      API_PORT: 3000
      DATA_SIGNER_ALGORITHM: ${SIGNATURE_ALGORITHM}
      DATA_SIGNER_PRIVATE: ${SIGNATURE_PRIVATE}
      AUTH_SERVICE_URL: http://auth:3000
      VEHICLE_SCRAPER_URL: http://goblin:80
      TRANSACTION_VALIDATOR_URL: http://kerek:80
      CHAIN_SERVICE_URL: http://chain:3000
      LOG_LEVEL: info
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    networks:
      - proxy
  notification:
    image: zcorp0902746/wheelz-notification-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
    environment:
      NODE_ENV: production
      NOTIFICATION_QUEUE_URL: amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      NOTIFICATION_QUEUE_NAME: notifications
      MESSAGE_EMITTER_HOST: ${SMTP_HOST}
      MESSAGE_EMITTER_PORT: ${SMTP_PORT}
      MESSAGE_EMITTER_USERNAME: ${SMTP_USERNAME}
      MESSAGE_EMITTER_PASSWORD: ${SMTP_PASSWORD}
      LOG_LEVEL: info
    networks:
      - proxy
  showcase:
    image: zcorp0902746/wheelz-showcase-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-showcase-service.rule=Host(`wheelz-showcase.zcorp.ovh`)
        - traefik.http.routers.wheelz-showcase-service.entrypoints=websecure
        - traefik.http.routers.wheelz-showcase-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-showcase-service.loadbalancer.server.port=80
    volumes:
      - wordpress_data:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: showcase
    networks:
      - proxy
  goblin:
    image: zcorp0902746/wheelz-goblin-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-goblin-service.rule=Host(`wheelz-goblin.zcorp.ovh`)
        - traefik.http.routers.wheelz-goblin-service.entrypoints=websecure
        - traefik.http.routers.wheelz-goblin-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-goblin-service.loadbalancer.server.port=80
    networks:
      - proxy
  kerek:
    image: zcorp0902746/wheelz-kerek-service:latest
    deploy:
      placement:
        constraints: [node.labels.apps == true ]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.wheelz-kerek-service.rule=Host(`wheelz-kerek.zcorp.ovh`)
        - traefik.http.routers.wheelz-kerek-service.entrypoints=websecure
        - traefik.http.routers.wheelz-kerek-service.tls.certresolver=myresolver
        - traefik.http.services.wheelz-kerek-service.loadbalancer.server.port=80
    networks:
      - proxy
networks:
  proxy:
    external: true
volumes:
  wordpress_data:
